
@use '0-settings/variables' as variables;
/* Grid */
$columns: 12;
// Using container-base-width from variables
$container-offset: variables.$base-spacing-unit;

// Using global variables from 0-settings/variables

$mq: (
  variables.$mobile: $columns,
    variables.$tablet: $columns,
      variables.$desktop: $columns
      );

    .container {
      max-width: variables.$container-base-width;
      padding-left: $container-offset;
      padding-right: $container-offset;
    }

    .container-big {
      max-width: 100%;
      margin: 0 auto;
      padding-left: calc(#{$container-offset} * 2);
      padding-right: calc(#{$container-offset} * 2);

      @media (max-width: variables.$mobile) {
        max-width: 480px;
        padding-left: calc(#{$container-offset} + 4px);
        padding-right: calc(#{$container-offset} + 4px);
      }
    }

    .container {
      margin: 0 auto;

      @media (max-width: variables.$wide) {
        max-width: 1000px;
        padding-left: $container-offset;
        padding-right: $container-offset;
      }

      @media (max-width: variables.$desktop) {
        max-width: 740px;
      }

      @media (max-width: variables.$tablet) {
        max-width: 560px;
      }

      @media (max-width: variables.$mobile) {
        max-width: 480px;
        padding-left: calc(#{$container-offset} + 4px);
        padding-right: calc(#{$container-offset} + 4px);
      }
    }

    .rowgallery {
      display: flex;
      flex-wrap: wrap;
      flex: 0 1 auto;
      flex-direction: row;
      box-sizing: border-box;
  margin-left: (variables.$base-spacing-unit * -1);
  margin-right: (variables.$base-spacing-unit * -1);
    }

    .row {
      display: flex;
      flex-wrap: wrap;
      flex: 0 1 auto;
      flex-direction: row;
      box-sizing: border-box;
  margin-left: (variables.$base-spacing-unit * -1);
  margin-right: (variables.$base-spacing-unit * -1);
    }

    .col {
  padding-left: variables.$base-spacing-unit;
  padding-right: variables.$base-spacing-unit;
    }

    [class^="col-"] {
      flex: auto;
    }


    @for $i from 0 through $columns {
      .col-#{$i} {
        width: calc(#{$i} / #{$columns} * 100%);
      }
    }

    @for $i from 0 through $columns {
      .push-#{$i} {
        margin-left: calc(#{$i} / #{$columns} * 100%);
      }
    }

    @for $i from 0 through $columns {
      .pull-#{$i} {
        margin-right: calc(#{$i} / #{$columns} * 100%);
      }
    }


    @each $key,
    $val in $mq {

      // WIDE
      @media(max-width: variables.$wide) {

        @for $i from 0 through $columns {
          .col-w-#{$i} {
            width: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .push-w-#{$i} {
            margin-left: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .pull-w-#{$i} {
            margin-right: calc(#{$i} / #{$columns} * 100%);
          }
        }
      }

      // DESKTOP
      @media(max-width: variables.$desktop) {

        @for $i from 0 through $columns {
          .col-d-#{$i} {
            width: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .push-d-#{$i} {
            margin-left: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .pull-d-#{$i} {
            margin-right: calc(#{$i} / #{$columns} * 100%);
          }
        }
      }

      // TABLET
      @media(max-width: variables.$tablet) {

        @for $i from 0 through $columns {
          .col-t-#{$i} {
            width: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .push-t-#{$i} {
            margin-left: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .pull-t-#{$i} {
            margin-right: calc(#{$i} / #{$columns} * 100%);
          }
        }
      }

      // MOBILE
      @media(max-width: variables.$mobile) {

        @for $i from 0 through $columns {
          .col-m-#{$i} {
            width: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .push-m-#{$i} {
            margin-left: calc(#{$i} / #{$columns} * 100%);
          }
        }

        @for $i from 0 through $columns {
          .pull-m-#{$i} {
            margin-right: calc(#{$i} / #{$columns} * 100%);
          }
        }
      }

    }